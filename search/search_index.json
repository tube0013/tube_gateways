{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the TubesZB Documentation","text":"<p>This site contains all the information and documentation for Tube's ZB hardware. Find the right guide to get your new device up and running with Home Assistant.</p> <p>You can purchase pre-assembled hardware from the official store:</p> <p>Shop at tubeszb.com</p>"},{"location":"#getting-started-guides","title":"Getting Started Guides","text":"<p>Click on the guide that matches your product to begin the setup process.</p> <ul> <li> <p>Zigbee Coordinators</p> <p>Step-by-step instructions for setting up your TubeZB Zigbee Coordinator with ZHA or Zigbee2MQTT.</p> <p> View Zigbee Guide</p> </li> <li> <p>Z-Wave PoE Kit</p> <p>How to set up your Z-Wave PoE kit using the Z-Wave JS UI addon in Home Assistant.</p> <p> View Z-Wave Guide</p> </li> <li> <p>Zigbee Routers</p> <p>How to pair your TubeZB Zigbee Router to extend the range of your network.</p> <p> View Router Guide</p> </li> <li> <p>Bluetooth Proxy</p> <p>Quickly set up and extend the Bluetooth coverage of your Home Assistant instance.</p> <p> View Bluetooth Proxy Guide</p> </li> <li> <p>Dual Radio Kit</p> <p>The Dual Radio Kit combines a Zigbee and a Z-Wave radio on a single device. You will need to set up both protocols.</p> <p>Important Note for Dual Radio Kits</p> <p>The Zigbee and Z-Wave radios share an IP address but use different ports. * Zigbee uses port <code>6638</code>. * Z-Wave uses port <code>6639</code>.</p> <p> View Zigbee Guide</p> <p> View Z-Wave Guide</p> </li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This guide will walk you through setting up your new TubeZB Coordinator.</p>"},{"location":"getting-started/#first-steps-physical-setup","title":"First Steps: Physical Setup","text":"<p>For Network (Ethernet) Coordinators:</p> <ol> <li>Connect the gateway to your local network using an ethernet cable.</li> <li>Power on the gateway using a 5v 1.5-2A power supply with a micro USB cable. The ethernet port's link lights will begin to blink as it connects to your network.</li> <li>Determine the device's IP address from your router's client list.</li> </ol> <p>Use a Static IP</p> <p>It is strongly advised to configure a static IP address or DHCP reservation for your coordinator in your router's settings. This prevents connection issues if the IP address changes.</p> <p>For USB Coordinators:</p> <ol> <li>Simply plug the coordinator into an available USB port on your Home Assistant machine. It should be auto-discovered.</li> </ol>"},{"location":"getting-started/#home-assistant-zha-setup","title":"Home Assistant (ZHA) Setup","text":"<p>Follow these instructions to configure your coordinator with the built-in ZHA integration.</p>"},{"location":"getting-started/#method-1-auto-discovery-recommended","title":"Method 1: Auto-Discovery (Recommended)","text":"<p>If Home Assistant discovers the device automatically, you will see a notification. Simply click through the configuration flow to add it to Home Assistant.</p> <p> </p> ZHA Discovery Notification <p> </p> ZHA Discovery Configuration"},{"location":"getting-started/#method-2-manual-setup","title":"Method 2: Manual Setup","text":"<p>If your coordinator is not discovered automatically, follow these steps:</p> <ol> <li>Navigate to Settings &gt; Devices &amp; Services and click Add Integration.</li> <li>Search for and select Zigbee Home Automation.     </li> <li>When asked, choose to Set up another instance of Zigbee Home Automation.     </li> <li>Select the Radio Type based on your coordinator model:<ul> <li>For CC2652p based gateways, select ZNP.</li> <li>For EFR32 based gateways, select EZSP.</li> </ul> </li> <li>In the Port Specific Settings dialog:<ul> <li>Enter <code>socket://IP_ADDRESS:6638</code> (replace <code>IP_ADDRESS</code> with your device's actual IP).</li> <li>Set Port Speed to <code>115200</code>.</li> <li>Select Software Flow Control. </li> </ul> </li> </ol>"},{"location":"getting-started/#zigbee2mqtt-setup","title":"Zigbee2MQTT Setup","text":"<p>ZHA vs. Zigbee2MQTT</p> <p>A coordinator can only be controlled by one service at a time. If Home Assistant auto-discovers the device for ZHA, you must choose to Ignore it before setting up Zigbee2MQTT. </p> <p>EFR32 Support</p> <p>At this time, only CC2652p based gateways are officially supported by Zigbee2MQTT. EFR32 gateways may work but are not recommended.</p>"},{"location":"getting-started/#configuring-the-serial-section","title":"Configuring the <code>serial</code> section","text":"<p>Whether you are using the Zigbee2MQTT addon or a standalone <code>configuration.yaml</code> file, you will need to edit the <code>serial</code> section.</p> <ol> <li>Navigate to the Zigbee2MQTT addon Configuration tab or open your <code>configuration.yaml</code> file.</li> <li>Find the <code>serial:</code> block. If it doesn't exist, add it.</li> <li>Use the tabs below to copy the correct configuration for your device.</li> </ol> <p> </p> Editing the serial settings in the addon configuration tab. <p>=== \"Network Coordinator (Ethernet)\"</p> <pre><code>For coordinators connected via Ethernet, use the `tcp://` port format. Replace `IP_ADDRESS` with your device's actual IP.\n\n```yaml\nserial:\n  port: 'tcp://IP_ADDRESS:6638'\n  # adapter: zstack  # For CC2652 based radios\n  # adapter: ember   # For EFR32 based radios\n```\n</code></pre> <p>=== \"USB Coordinator\"</p> <pre><code>For coordinators connected via USB, find the device path under **Settings &gt; System &gt; Hardware &gt; All Hardware**. It will start with `/dev/serial/by-id/...`.\n\n```yaml\nserial:\n  port: '/dev/serial/by-id/usb-1a86_TubesZB_971207DO-if00-port0'\n  # adapter: zstack  # For CC2652 based radios\n  # adapter: ember   # For EFR32 based radios\n```\n</code></pre>"},{"location":"getting-started/#esphome-web-interface","title":"ESPHome Web Interface","text":"<p>The ESP32 microcontroller inside the gateway runs ESPHome. You can access its web interface by navigating to the device's IP address in a browser.</p> <p>Ignore ESPHome Entities in Home Assistant</p> <p>ESPHome creates switch entities in Home Assistant that are used to prep the Zigbee module for firmware updates. It is highly advised to ignore or disable these entities. Accidentally toggling them can reset the Zigbee module and disrupt your network.</p>"},{"location":"getting-started/#firmware-updates","title":"Firmware Updates","text":"<p>Firmware update instructions can be found on the individual product pages.</p>"},{"location":"model-glossary/","title":"Model Glossary","text":"<p>Use this guide to visually identify your TubeZB device and find links to its specific documentation and source files.</p>"},{"location":"model-glossary/#current-models","title":"Current Models","text":"<p>These are the models currently available for purchase on tubeszb.com. Click the model name to go to the relevant documentation page.</p> Image Model Name Description EFR32 MGM24 PoE Coordinator 2024 EFR32MG24 Radio + Olimex ESP32-PoE Module CC2652P7 PoE Coordinator 2023 CC2652P7 Radio + Olimex ESP32-PoE Module CC2652P2 PoE Coordinator 2023 CC2652P2 Radio + Olimex ESP32-PoE Module CC2652P2 Ethernet/USB Coordinator 2023 CC2652P2 Radio + WirelessTag WT32-ETH01 Module Z-Wave PoE Kit Olimex ESP32-PoE base for Z-Wave modules Dual Radio Kit Combines Zigbee and Z-Wave radios Zigbee Router CC2652P2 Based Zigbee Router/Repeater Bluetooth Proxy Kit WirelessTag WT32-ETH01 ESP32 Module"},{"location":"model-glossary/#retired-models","title":"Retired Models","text":"<p>These are previous hardware versions that are no longer sold but are still supported. The links below go to the source files on GitHub.</p> Image Model Name Description tubeszb-efr32-MGM12-eth_usb MGM12P Radio Module + WirelessTag WT32-ETH01 ESP32 Module tubeszb-cc2652-eth CC2652P2 Radio Module + WirelessTag WT32-ETH01 ESP32 Module tubeszb-cc2652-poe CC2652P2 Radio Module + Olimex ESP32-PoE Module Image Needed tubeszb-efr32-MGM112-pro1 MGM12P Radio Module + WirelessTag WT32-ETH01 ESP32 Module tubeszb-efr32-MGM210_Series_2 MGM210 Radio Module + WirelessTag WT32-ETH01 ESP32 Module"},{"location":"getting-started/bluetooth-proxy/","title":"Getting Started with Bluetooth Proxies","text":"<p>This guide will walk you through setting up your new TubeZB Bluetooth Proxy.</p>"},{"location":"getting-started/bluetooth-proxy/#what-is-a-bluetooth-proxy","title":"What is a Bluetooth Proxy?","text":"<p>A Bluetooth Proxy extends the range of Bluetooth reception for your Home Assistant instance. If you have Bluetooth devices (like temperature sensors, smart locks, etc.) that are too far away from your main Home Assistant machine to connect reliably, you can place a proxy closer to them. The proxy will listen for Bluetooth signals and relay them back to Home Assistant over your network (WiFi or Ethernet).</p>"},{"location":"getting-started/bluetooth-proxy/#physical-setup","title":"Physical Setup","text":"<ol> <li> <p>Connect the Bluetooth Proxy to your local network using an ethernet cable (recommended for best reliability).</p> </li> <li> <p>Power on the device using a 5V USB-C power supply.</p> </li> </ol>"},{"location":"getting-started/bluetooth-proxy/#home-assistant-setup","title":"Home Assistant Setup","text":"<p>Tube's Bluetooth Proxies run ESPHome. When you connect it to your network, Home Assistant should automatically discover it.</p> <ol> <li> <p>Ensure your Bluetooth Proxy is powered on and connected to the same network as your Home Assistant instance.</p> </li> <li> <p>A notification should appear in Settings &gt; Devices &amp; Services for a new ESPHome device.</p> </li> <li> <p>Click Configure and then Submit to add the proxy to your system.</p> </li> </ol> <p>That's it! The proxy will now automatically start listening for Bluetooth devices and forwarding the data. You don't need to do anything else. You can confirm it's working by seeing new Bluetooth devices appear in Home Assistant that were previously out of range.</p>"},{"location":"getting-started/router/","title":"Getting Started with Zigbee Routers","text":"<p>This guide covers the initial setup and pairing for all TubesZB Zigbee Routers.</p>"},{"location":"getting-started/router/#pairing-your-router","title":"Pairing Your Router","text":"<p>The process is designed to be as simple as possible. Your router will automatically try to join a Zigbee network when it's first powered on.</p> <ol> <li> <p>Enable Pairing: In your Zigbee platform (like ZHA or Zigbee2MQTT), enable \"permit join\" mode to allow new devices to connect.</p> </li> <li> <p>Power On the Router: Plug the router into a suitable USB power source.</p> <ul> <li>Current Models: Use a 5V 1-2A power supply with a USB-C cable.</li> <li>Older Models: Use a 5V 1-2A power supply with a Micro-USB cable.</li> </ul> </li> <li> <p>Wait for Pairing: The router should now be discovered and join your Zigbee network automatically. You will see it appear in your Zigbee integration's device list.</p> </li> </ol> <p>If the router does not pair, try power cycling it once while your network is still in pairing mode. For more advanced operations, please see the specific documentation for your router model.</p>"},{"location":"getting-started/z-wave/","title":"Getting Started with the Z-Wave PoE Kit","text":"<p>This guide will walk you through setting up your new TubeZB Z-Wave PoE Kit with Home Assistant.</p> <p>For New Z-Wave Networks</p> <p>This guide covers the process for creating a brand new Z-Wave network. If you need to migrate an existing network from a different Z-Wave stick, please refer to the advanced documentation (coming soon).</p>"},{"location":"getting-started/z-wave/#1-physical-setup","title":"1. Physical Setup","text":"<p>Your setup steps will depend on whether you purchased the kit with the Zooz Z-Wave module pre-installed or the \"No Radio\" version.</p>"},{"location":"getting-started/z-wave/#option-a-kit-with-pre-installed-zooz-zac93","title":"Option A: Kit with Pre-installed Zooz ZAC93","text":"<p>If you purchased the kit with the Zooz ZAC93 module included, it comes pre-installed and ready to go.</p> <ol> <li>Connect the Z-Wave PoE Kit to your local network using an ethernet cable that provides Power over Ethernet (PoE).</li> <li>The device will power on and connect to your network.</li> <li>Find the IP Address assigned to the device from your router's client list.</li> </ol> <p>Use a DHCP Reservation (Recommended)</p> <p>To ensure the device's IP address doesn't change, it is strongly advised to configure a DHCP Reservation for it in your router's settings. This links the device's unique MAC address to a specific IP, so it gets the same one every time it connects.</p> <p>Advanced: Static IP Firmware</p> <p>Setting a true static IP requires custom firmware. For advanced users who need this, you can build a custom firmware binary using the TubesZB ESPHome Firmware Builder.</p> <p>Register Your Zooz Module!</p> <p>If you purchased a kit including the Zooz ZAC93, be sure to register your module with Zooz within 30 days of purchase. This gives you a 5-Year Extended Warranty, direct access to firmware updates, and expedited support.</p>"},{"location":"getting-started/z-wave/#option-b-kit-with-no-radio-bring-your-own-module","title":"Option B: Kit with No Radio (Bring Your Own Module)","text":"<p>If you purchased the \"No Radio\" version of the kit, you will need to provide and install your own compatible Z-Wave module.</p>"},{"location":"getting-started/z-wave/#compatible-modules","title":"Compatible Modules","text":"<p>This kit is designed for Z-Wave modules that use the Raspberry Pi GPIO pin layout.</p> <ul> <li>Zooz 800 Long Range ZAC93</li> <li>Z-Wave.me RaZberry 7 Pro</li> </ul> <p>Affiliate Link Disclosure</p> <p>The links above are Amazon affiliate links. As an Amazon Associate, I earn from qualifying purchases.</p>"},{"location":"getting-started/z-wave/#installation","title":"Installation","text":"<ol> <li>Carefully open the 3D printed enclosure.</li> <li>Align the GPIO pins on your Z-Wave module with the female GPIO header on the Olimex ESP32-PoE board.</li> <li>Press down firmly and evenly to seat the module securely. Ensure all pins are correctly engaged.</li> <li>Close the enclosure.</li> <li>Follow the steps in Option A to connect the device to your network and find its IP address.</li> </ol>"},{"location":"getting-started/z-wave/#2-home-assistant-setup","title":"2. Home Assistant Setup","text":"<p>The recommended method for using this Z-Wave kit is with the Z-Wave JS UI addon in Home Assistant.</p> <ol> <li> <p>Install and Start the Addon:</p> <ul> <li>Click the badge below to open the Z-Wave JS UI addon page in your Home Assistant instance and click Install.</li> </ul> <p></p> <ul> <li>Once installed, go to the Info tab and Start the addon.</li> </ul> </li> <li> <p>Configure the Addon via the Web UI:</p> <ul> <li>After the addon has started, click Open Web UI.</li> <li>In the Z-Wave JS UI interface, navigate to Settings (the gear icon) and then select Z-Wave.</li> <li>In the Serial Port field, enter the network path for your Z-Wave kit, replacing <code>IP_ADDRESS</code> with the IP you found earlier:   <pre><code>tcp://IP_ADDRESS:6638\n</code></pre></li> <li> <p>Generate and Save Security Keys:     !!! danger \"Critical Step for New Networks\"         If you are setting up a new network, you must generate new security keys. These keys are essential for securely including devices and for backing up your network.         1. Scroll down to the Security Keys section.         2. Click the refresh icon next to each of the four keys (<code>S2_AccessControl</code>, <code>S2_Authenticated</code>, <code>S2_Unauthenticated</code>, and <code>S0_Legacy</code>) to generate new random values.         3. Copy and save these keys somewhere safe, like a password manager. You will need them if you ever have to restore your network.</p> </li> <li> <p>Click Save at the bottom of the page. The addon will restart and connect to your Z-Wave PoE Kit. You can check the Control Panel to see your Z-Wave stick appear as the controller.</p> </li> </ul> </li> <li> <p>Install the Z-Wave JS Integration:</p> <ul> <li>Navigate back to Home Assistant and go to Settings &gt; Devices &amp; Services.</li> <li>Home Assistant should now auto-discover the Z-Wave JS integration. Click Configure and follow the prompts to add it.</li> <li>If it is not discovered, click Add Integration, search for Z-Wave, and follow the prompts. It will automatically connect to the running Z-Wave JS UI addon.</li> </ul> </li> </ol>"},{"location":"getting-started/zigbee/","title":"Getting Started with Zigbee Coordinators","text":"<p>This guide will walk you through setting up your new TubesZB Zigbee Coordinator with Home Assistant.</p>"},{"location":"getting-started/zigbee/#first-steps-physical-setup","title":"First Steps: Physical Setup","text":"<p>For Network (Ethernet) Coordinators:</p> <ol> <li>Connect the gateway to your local network using an ethernet cable.</li> <li>For non-PoE models power the gateway using a 5v 1.5-2A power supply with the included USB-C cable (MicroUSB on older models). The ethernet port's link lights will begin to blink as it connects to your network.</li> <li>Determine the device's IP address from your router's client list.</li> </ol> <p>Use a DHCP Reservation (Recommended)</p> <p>To ensure the device's IP address doesn't change, it is strongly advised to configure a DHCP Reservation for it in your router's settings. This links the device's unique MAC address to a specific IP, so it gets the same one every time it connects.</p> <p>Advanced: Static IP Firmware</p> <p>Setting a true static IP requires custom firmware. For advanced users who need this, you can build a custom firmware binary using the TubesZB ESPHome Firmware Builder.</p> <p>For USB Coordinators:</p> <ol> <li>Simply plug the coordinator's USB Cable into an available USB port on your Home Assistant machine. It should be auto-discovered.</li> </ol>"},{"location":"getting-started/zigbee/#home-assistant-zha-setup","title":"Home Assistant (ZHA) Setup","text":"<p>Follow these instructions to configure your coordinator with the built-in ZHA integration.</p>"},{"location":"getting-started/zigbee/#method-1-auto-discovery-recommended","title":"Method 1: Auto-Discovery (Recommended)","text":"<p>If Home Assistant discovers the device automatically, you will see a notification. Simply click through the configuration flow to add it to Home Assistant.</p> <p> </p> ZHA Discovery Notification <p> </p> ZHA Discovery Configuration"},{"location":"getting-started/zigbee/#method-2-manual-setup","title":"Method 2: Manual Setup","text":"<p>If your coordinator is not discovered automatically, follow these steps:</p> <ol> <li>Navigate to Settings &gt; Devices &amp; Services and click Add Integration.</li> <li>Search for and select Zigbee Home Automation.     </li> <li>When asked, choose to Set up another instance of Zigbee Home Automation.     </li> <li>Select the Radio Type based on your coordinator model:<ul> <li>For CC2652p based gateways, select ZNP.</li> <li>For EFR32 based gateways, select EZSP.</li> </ul> </li> <li> <p>In the Port Specific Settings dialog:</p> <ul> <li>Enter <code>socket://IP_ADDRESS:6638</code> (replace <code>IP_ADDRESS</code> with your device's actual IP).</li> <li>Set Port Speed to <code>115200</code>.</li> <li>Select Software Flow Control.</li> </ul> <p></p> </li> </ol>"},{"location":"getting-started/zigbee/#zigbee2mqtt-setup","title":"Zigbee2MQTT Setup","text":"<p>ZHA vs. Zigbee2MQTT</p> <p>A coordinator can only be controlled by one service at a time. If Home Assistant auto-discovers the device for ZHA, you must choose to Ignore it before setting up Zigbee2MQTT. </p> <p>EFR32 Support</p> <p>Zigbee2MQTT supports EFR32 coordinators, but the must be on a 7.4.x or greater firmware</p>"},{"location":"getting-started/zigbee/#configuring-the-serial-section","title":"Configuring the <code>serial</code> section","text":"<p>Whether you are using the Zigbee2MQTT addon or a standalone <code>configuration.yaml</code> file, you will need to edit the <code>serial</code> section.</p> <ol> <li>Navigate to the Zigbee2MQTT addon Configuration tab or open your <code>configuration.yaml</code> file.</li> <li>Find the <code>serial:</code> block. If it doesn't exist, add it.</li> <li>Use the tabs below to copy the correct configuration for your device.</li> </ol> <p> </p> Editing the serial settings in the addon configuration tab."},{"location":"getting-started/zigbee/#network-coordinator-ethernet","title":"Network Coordinator (Ethernet)","text":"<pre><code>For coordinators connected via Ethernet, use the `tcp://` port format. Replace `IP_ADDRESS` with your device's actual IP.\n\n```yaml\nserial:\n  port: 'tcp://IP_ADDRESS:6638'\n  # adapter: zstack  # For CC2652 based radios\n  # adapter: ember   # For EFR32 based radios\n```\n</code></pre>"},{"location":"getting-started/zigbee/#usb-coordinator","title":"USB Coordinator","text":"<pre><code>For coordinators connected via USB, find the device path under **Settings &gt; System &gt; Hardware &gt; All Hardware**. It will start with `/dev/serial/by-id/...`.\n\n```yaml\nserial:\n  port: '/dev/serial/by-id/usb-1a86_TubesZB_971229NY-if00-port0'\n  # adapter: zstack  # For CC2652 based radios\n  # adapter: ember   # For EFR32 based radios\n```\n</code></pre>"},{"location":"getting-started/zigbee/#esphome-web-interface","title":"ESPHome Web Interface","text":"<p>The ESP32 microcontroller inside the gateway runs ESPHome. You can access its web interface by navigating to the device's IP address in a browser.</p> <p>If you add the ESPHome device to you Home Assistant instance it will create some diagnostic entities for showing if the serial connection connected or not. as well as the connection count. </p> <p></p> <p>Ignore ESPHome Entities in Home Assistant</p> <p>There are several other enties that are created but set as disabled by default. It is highly advised to leave these as disabled. Accidentally toggling them can reset the Zigbee module and disrupt your network.</p>"},{"location":"getting-started/zigbee/#firmware-updates","title":"Firmware Updates","text":"<p>Firmware update instructions can be found on the individual product pages.</p>"},{"location":"zigbee-routers/cc2652-based-routers/","title":"TubesZB CC2652P2 Zigbee Router","text":"<p>This page contains technical details for the TubesZB CC2652P2 Zigbee Router, including factory reset and firmware update procedures.</p>"},{"location":"zigbee-routers/cc2652-based-routers/#device-operations","title":"Device Operations","text":""},{"location":"zigbee-routers/cc2652-based-routers/#factory-reset","title":"Factory Reset","text":"<p>If you need to re-pair the router or start fresh, you can perform a factory reset.</p> <ol> <li>Carefully open the router's enclosure to access the circuit board.</li> <li>Locate the small button labeled BSL (Boot Strap Loader).</li> <li>With the router powered on, give the BSL button a single, quick press.</li> </ol> <p>The device will reset and should immediately enter pairing mode again.</p>"},{"location":"zigbee-routers/cc2652-based-routers/#firmware-updates","title":"Firmware Updates","text":"<p>Updating the firmware on the CC2652P2 module requires a physical connection to a computer and the use of a specific flashing tool.</p> <p>Required Tool: cc2538-bsl.py</p> <p>The flashing process differs slightly depending on whether your router has a USB-C or a Micro-USB port.</p>"},{"location":"zigbee-routers/cc2652-based-routers/#flashing-a-router-with-a-usb-c-port","title":"Flashing a Router with a USB-C Port","text":"<p>Newer routers with a USB-C port have a built-in serial-to-USB converter, which simplifies the process.</p> <ol> <li>Press and hold the BSL button on the router's circuit board.</li> <li>While still holding the button, plug the router into your computer using a USB-C cable.</li> <li>Continue holding the BSL button for about 10 seconds, then release. The device is now in bootloader mode.</li> <li>Use the <code>cc2538-bsl.py</code> tool to flash the new firmware.</li> </ol>"},{"location":"zigbee-routers/cc2652-based-routers/#flashing-a-router-with-a-micro-usb-port","title":"Flashing a Router with a Micro-USB Port","text":"<p>Older routers with a Micro-USB port require an external USB-to-Serial adapter for flashing.</p> <p>Serial Adapter Required</p> <p>You will need a 3.3V USB-to-Serial TTL adapter to flash this device. Adapters using CP210x, CH340, or FTDI chips are common and will work. * Example CP2102 USB to TTL module (Affiliate Link)</p>"},{"location":"zigbee-routers/cc2652-based-routers/#flashing-steps","title":"Flashing Steps","text":"<ol> <li>Connect the Adapter: Use dupont jumper wires to connect your serial adapter to the router's programming pins. The connection order is critical:</li> </ol> Serial Adapter Router Pin 3.3V 3.3V GND GND RX TX TX RX <ol> <li> <p>Enter Bootloader Mode:</p> <ul> <li>Plug the USB-to-Serial adapter into your computer.</li> <li>Press and hold the BSL button on the router.</li> <li>While holding the button, slide the 4 connected dupont wires over the corresponding pins on the router.</li> <li>Release the BSL button. The device is now in bootloader mode.</li> </ul> </li> <li> <p>Flash the Firmware: Use the <code>cc2538-bsl.py</code> tool to flash the new firmware.</p> <p></p> </li> </ol>"},{"location":"zigbee-routers/cc2652-based-routers/#example-flash-command","title":"Example Flash Command","text":"<p>The command will look similar to this. Replace the port and file path with your own.</p> <p>```bash cc2538-bsl.py -p /dev/cu.usbserial-00F9450F -evw /PATH_TO/tubeszb_router_20220111.hex</p>"},{"location":"zigbee-routers/efr32-based-routers/","title":"EFR32 Based Zigbee Router","text":"<p>This page contains technical details for the Tube's EFR32 based Zigbee Routers, including button functions and firmware update procedures.</p>"},{"location":"zigbee-routers/efr32-based-routers/#getting-started","title":"Getting Started","text":"<p>Initial pairing is simple and works the same way as other TubeZB routers. Please follow the main router getting started guide for instructions.</p> <p> View Router Getting Started Guide</p>"},{"location":"zigbee-routers/efr32-based-routers/#device-operations","title":"Device Operations","text":"<p>The single button on the EFR32 router has multiple functions depending on the state of the device and the duration of the press.</p> <p>Settings are Temporary</p> <p>Toggled statuses from a short button press (like network steering) only remain active while the router is powered on. Power cycling the router will reset it to its default behavior.</p>"},{"location":"zigbee-routers/efr32-based-routers/#if-the-router-is-not-joined-to-a-network","title":"If the Router is NOT Joined to a Network:","text":"<ul> <li>Short Press: Toggles \"Network Steering\". This starts or stops the router's attempt to find and join a Zigbee network. This is useful if you want to power on the device without it immediately trying to pair.</li> <li>Long Press (&gt;5s): Reboots the router into bootloader mode. This is used to prepare the device for a firmware update.</li> </ul>"},{"location":"zigbee-routers/efr32-based-routers/#if-the-router-is-joined-to-a-network","title":"If the Router IS Joined to a Network:","text":"<ul> <li>Short Press: Toggles \"Source Route Discovery\". This is an advanced feature that is generally not needed for most networks. It starts/stops the broadcasting of MTORRs (Many-to-One Route Requests).</li> <li>Long Press (&gt;5s): Makes the router leave its current Zigbee network. It will need to be re-paired after this action.</li> </ul>"},{"location":"zigbee-routers/efr32-based-routers/#firmware-updates","title":"Firmware Updates","text":""},{"location":"zigbee-routers/efr32-based-routers/#firmware-source","title":"Firmware Source","text":"<p>The recommended firmware for these routers is developed by Nerivec and is available for download from the silabs-firmware-builder releases page.</p>"},{"location":"zigbee-routers/efr32-based-routers/#flashing-methods","title":"Flashing Methods","text":"<p>There are two primary methods for flashing firmware to the EFR32 routers.</p>"},{"location":"zigbee-routers/efr32-based-routers/#method-1-universal-silicon-labs-flasher-advanced","title":"Method 1: Universal Silicon Labs Flasher (Advanced)","text":"<p>This is a Python-based command-line tool for flashing Silicon Labs devices. It is a powerful tool for users who are comfortable working in a terminal.</p> <ol> <li>Install the Tool: Follow the installation instructions on the Universal Silicon Labs Flasher GitHub page.</li> <li>Enter Bootloader Mode: Before flashing, you must put the router into bootloader mode. While the device is powered on, press and hold the button for more than 5 seconds until the LED changes.</li> <li>Run the Flasher: Use the tool to flash the downloaded firmware file. The command will look something like this:     <pre><code>universal-silabs-flasher --device /dev/tty.usbmodem1101 flash --firmware your-firmware-file.gbl\n</code></pre></li> </ol>"},{"location":"zigbee-routers/efr32-based-routers/#method-2-tubes-home-assistant-addon-recommended-for-ha-users","title":"Method 2: Tube's Home Assistant Addon (Recommended for HA Users)","text":"<p>For users running Home Assistant OS or Supervised, the easiest method is to use the TubesZB Addon, which provides a user-friendly interface for flashing.</p> <ol> <li>Install the TubesZB Addon Repository in Home Assistant.</li> <li>Install the appropriate flashing utility from the addon store.</li> <li>Follow the instructions within the addon's documentation to flash your router.</li> </ol>"},{"location":"zwave-kits/","title":"Z-Wave PoE Kit","text":"<p>The TubeZB Z-Wave PoE Kit provides a reliable, network-connected Z-Wave radio for Home Assistant. It is powered by Power over Ethernet (PoE) and uses an ESP32 microcontroller to bridge the Z-Wave serial module to your network.</p>"},{"location":"zwave-kits/#getting-started","title":"Getting Started","text":"<p>For initial setup and integration with Home Assistant, please follow the main Z-Wave getting started guide.</p> <p> View Z-Wave Getting Started Guide</p>"},{"location":"zwave-kits/#hardware-components","title":"Hardware Components","text":"<p>The Z-Wave PoE Kit consists of two main printed circuit boards (PCBs):</p> <ol> <li> <p>Olimex ESP32-PoE Board: This is the brains of the device. It's an ESP32 development board that includes a built-in PoE module, allowing it to be powered directly from a compatible network switch or injector. It runs a custom ESPHome firmware to manage the network connection and communication with the Z-Wave radio.</p> </li> <li> <p>Raspberry Pi GPIO to Olimex UEXT Converter: This is a custom adapter board designed specifically to connect Z-Wave modules with a Raspberry Pi GPIO-style header to the Olimex board's UEXT connector. You can find more details on the converter's product page.</p> </li> </ol>"},{"location":"zwave-kits/#3d-printed-enclosure","title":"3D Printed Enclosure","text":"<p>For those who wish to print their own case, the STL files are available on GitHub.</p> <p> Download Case STL Files</p>"},{"location":"zwave-kits/#firmware-updates","title":"Firmware Updates","text":"<p>There are two separate firmwares on this device that can be updated: the ESPHome firmware on the ESP32, and the firmware on the Z-Wave radio module itself.</p>"},{"location":"zwave-kits/#esphome-firmware-esp32","title":"ESPHome Firmware (ESP32)","text":"<p>The ESPHome firmware handles the network connectivity. You can update it using the web-based flashing tool. For advanced users, the base ESPHome YAML configuration is also available.</p> <ul> <li>View the current ESPHome YAML Configuration</li> </ul>"},{"location":"zwave-kits/#flashing-instructions","title":"Flashing Instructions","text":"<ol> <li> <p>Disconnect PoE Power:     !!! danger \"CRITICAL SAFETY WARNING\"         You MUST unplug the ethernet cable providing PoE before connecting the device to your computer via USB. Failure to do so can permanently damage the USB port on the ESP32 board and potentially the USB controller on your computer.</p> </li> <li> <p>Access the USB Port:</p> <ul> <li>Remove the lid from the 3D-printed enclosure.</li> <li>Gently lift the end of the boards near the ethernet port to pivot the assembly upwards. This will expose the micro-USB port on the Olimex ESP32-PoE board.</li> </ul> </li> <li> <p>Connect to Computer:</p> <ul> <li>Connect a micro-USB data cable from the ESP32 board to your computer.</li> </ul> </li> <li> <p>Flash the Firmware:</p> <ul> <li>For standard DHCP firmware: Use the TubesZB Web Flasher. Select \"TubesZB ZWave Kit\" from the dropdown and follow the on-screen instructions to connect and flash.</li> <li>For a static IP: You must first build a custom firmware binary. Go to the TubesZB ESPHome Builder repository and create a new issue using the \"ESPHome Static IP Configuration\" template. Fill out your network details, and a GitHub Action will automatically compile a firmware for you to download and flash.</li> </ul> </li> </ol>"},{"location":"zwave-kits/#z-wave-radio-firmware","title":"Z-Wave Radio Firmware","text":"<p>Updating the firmware on the Z-Wave radio module itself depends on the model you are using.</p>"},{"location":"zwave-kits/#zooz-zac93-module","title":"Zooz ZAC93 Module","text":"<p>The firmware on the Zooz ZAC93 module can be updated directly through the Z-Wave JS UI in Home Assistant.</p> <ol> <li>Obtain the correct firmware file from the Zooz OTA Firmware Files page.</li> <li>In the Z-Wave JS UI, navigate to the Control Panel.</li> <li>Select your Zooz controller node.</li> <li>Expand the Advanced actions.</li> <li>Under Firmware update, upload the file and begin the process.</li> </ol>"},{"location":"zwave-kits/#z-waveme-razberry-7-pro-module","title":"Z-Wave.me RaZberry 7 Pro Module","text":"<p>Updating the RaZberry module is a more advanced process that currently requires a Raspberry Pi.</p> <ol> <li>Safely shut down your Z-Wave PoE Kit and remove the RaZberry module.</li> <li>Install the RaZberry module onto the GPIO header of a Raspberry Pi.</li> <li>Download and install the Z-Way software from Z-Wave.me on the Raspberry Pi.</li> <li>Access the Z-Way Expert UI in your browser.</li> <li>Use the built-in firmware update tool within the Expert UI to flash the new firmware onto the module.</li> <li>Once complete, remove the module from the Raspberry Pi and reinstall it in your Z-Wave PoE Kit.</li> </ol>"}]}